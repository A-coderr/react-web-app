{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst flatten_1 = __importDefault(require(\"lodash/flatten\"));\nconst omit_1 = __importDefault(require(\"lodash/omit\"));\nconst errors_1 = require(\"@feathersjs/errors\");\nconst commons_1 = require(\"@feathersjs/commons\");\nconst debug = (0, commons_1.createDebug)('@feathersjs/authentication/hooks/authenticate');\nexports.default = (originalSettings, ...originalStrategies) => {\n  const settings = typeof originalSettings === 'string' ? {\n    strategies: (0, flatten_1.default)([originalSettings, ...originalStrategies])\n  } : originalSettings;\n  if (!originalSettings || settings.strategies.length === 0) {\n    throw new Error('The authenticate hook needs at least one allowed strategy');\n  }\n  return async (context, _next) => {\n    const next = typeof _next === 'function' ? _next : async () => context;\n    const {\n      app,\n      params,\n      type,\n      path,\n      service\n    } = context;\n    const {\n      strategies\n    } = settings;\n    const {\n      provider,\n      authentication\n    } = params;\n    const authService = app.defaultAuthentication(settings.service);\n    debug(`Running authenticate hook on '${path}'`);\n    if (type && type !== 'before' && type !== 'around') {\n      throw new errors_1.NotAuthenticated('The authenticate hook must be used as a before hook');\n    }\n    if (!authService || typeof authService.authenticate !== 'function') {\n      throw new errors_1.NotAuthenticated('Could not find a valid authentication service');\n    }\n    if (service === authService) {\n      throw new errors_1.NotAuthenticated('The authenticate hook does not need to be used on the authentication service');\n    }\n    if (params.authenticated === true) {\n      return next();\n    }\n    if (authentication) {\n      const authParams = (0, omit_1.default)(params, 'provider', 'authentication');\n      debug('Authenticating with', authentication, strategies);\n      const authResult = await authService.authenticate(authentication, authParams, ...strategies);\n      context.params = Object.assign({}, params, (0, omit_1.default)(authResult, 'accessToken'), {\n        authenticated: true\n      });\n    } else if (provider) {\n      throw new errors_1.NotAuthenticated('Not authenticated');\n    }\n    return next();\n  };\n};","map":{"version":3,"names":["flatten_1","__importDefault","require","omit_1","errors_1","commons_1","debug","createDebug","exports","default","originalSettings","originalStrategies","settings","strategies","length","Error","context","_next","next","app","params","type","path","service","provider","authentication","authService","defaultAuthentication","NotAuthenticated","authenticate","authenticated","authParams","authResult","Object","assign"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\authentication\\src\\hooks\\authenticate.ts"],"sourcesContent":["import flatten from 'lodash/flatten'\nimport omit from 'lodash/omit'\nimport { HookContext, NextFunction } from '@feathersjs/feathers'\nimport { NotAuthenticated } from '@feathersjs/errors'\nimport { createDebug } from '@feathersjs/commons'\n\nconst debug = createDebug('@feathersjs/authentication/hooks/authenticate')\n\nexport interface AuthenticateHookSettings {\n  service?: string\n  strategies?: string[]\n}\n\nexport default (originalSettings: string | AuthenticateHookSettings, ...originalStrategies: string[]) => {\n  const settings =\n    typeof originalSettings === 'string'\n      ? { strategies: flatten([originalSettings, ...originalStrategies]) }\n      : originalSettings\n\n  if (!originalSettings || settings.strategies.length === 0) {\n    throw new Error('The authenticate hook needs at least one allowed strategy')\n  }\n\n  return async (context: HookContext, _next?: NextFunction) => {\n    const next = typeof _next === 'function' ? _next : async () => context\n    const { app, params, type, path, service } = context\n    const { strategies } = settings\n    const { provider, authentication } = params\n    const authService = app.defaultAuthentication(settings.service)\n\n    debug(`Running authenticate hook on '${path}'`)\n\n    if (type && type !== 'before' && type !== 'around') {\n      throw new NotAuthenticated('The authenticate hook must be used as a before hook')\n    }\n\n    if (!authService || typeof authService.authenticate !== 'function') {\n      throw new NotAuthenticated('Could not find a valid authentication service')\n    }\n\n    if (service === authService) {\n      throw new NotAuthenticated(\n        'The authenticate hook does not need to be used on the authentication service'\n      )\n    }\n\n    if (params.authenticated === true) {\n      return next()\n    }\n\n    if (authentication) {\n      const authParams = omit(params, 'provider', 'authentication')\n\n      debug('Authenticating with', authentication, strategies)\n\n      const authResult = await authService.authenticate(authentication, authParams, ...strategies)\n\n      context.params = Object.assign({}, params, omit(authResult, 'accessToken'), {\n        authenticated: true\n      })\n    } else if (provider) {\n      throw new NotAuthenticated('Not authenticated')\n    }\n\n    return next()\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,MAAAA,SAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,MAAAC,MAAA,GAAAF,eAAA,CAAAC,OAAA;AAEA,MAAAE,QAAA,GAAAF,OAAA;AACA,MAAAG,SAAA,GAAAH,OAAA;AAEA,MAAMI,KAAK,GAAG,IAAAD,SAAA,CAAAE,WAAW,EAAC,+CAA+C,CAAC;AAO1EC,OAAA,CAAAC,OAAA,GAAe,CAACC,gBAAmD,EAAE,GAAGC,kBAA4B,KAAI;EACtG,MAAMC,QAAQ,GACZ,OAAOF,gBAAgB,KAAK,QAAQ,GAChC;IAAEG,UAAU,EAAE,IAAAb,SAAA,CAAAS,OAAO,EAAC,CAACC,gBAAgB,EAAE,GAAGC,kBAAkB,CAAC;EAAC,CAAE,GAClED,gBAAgB;EAEtB,IAAI,CAACA,gBAAgB,IAAIE,QAAQ,CAACC,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;IACzD,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAC9E;EAEA,OAAO,OAAOC,OAAoB,EAAEC,KAAoB,KAAI;IAC1D,MAAMC,IAAI,GAAG,OAAOD,KAAK,KAAK,UAAU,GAAGA,KAAK,GAAG,YAAYD,OAAO;IACtE,MAAM;MAAEG,GAAG;MAAEC,MAAM;MAAEC,IAAI;MAAEC,IAAI;MAAEC;IAAO,CAAE,GAAGP,OAAO;IACpD,MAAM;MAAEH;IAAU,CAAE,GAAGD,QAAQ;IAC/B,MAAM;MAAEY,QAAQ;MAAEC;IAAc,CAAE,GAAGL,MAAM;IAC3C,MAAMM,WAAW,GAAGP,GAAG,CAACQ,qBAAqB,CAACf,QAAQ,CAACW,OAAO,CAAC;IAE/DjB,KAAK,CAAC,iCAAiCgB,IAAI,GAAG,CAAC;IAE/C,IAAID,IAAI,IAAIA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,QAAQ,EAAE;MAClD,MAAM,IAAIjB,QAAA,CAAAwB,gBAAgB,CAAC,qDAAqD,CAAC;IACnF;IAEA,IAAI,CAACF,WAAW,IAAI,OAAOA,WAAW,CAACG,YAAY,KAAK,UAAU,EAAE;MAClE,MAAM,IAAIzB,QAAA,CAAAwB,gBAAgB,CAAC,+CAA+C,CAAC;IAC7E;IAEA,IAAIL,OAAO,KAAKG,WAAW,EAAE;MAC3B,MAAM,IAAItB,QAAA,CAAAwB,gBAAgB,CACxB,8EAA8E,CAC/E;IACH;IAEA,IAAIR,MAAM,CAACU,aAAa,KAAK,IAAI,EAAE;MACjC,OAAOZ,IAAI,EAAE;IACf;IAEA,IAAIO,cAAc,EAAE;MAClB,MAAMM,UAAU,GAAG,IAAA5B,MAAA,CAAAM,OAAI,EAACW,MAAM,EAAE,UAAU,EAAE,gBAAgB,CAAC;MAE7Dd,KAAK,CAAC,qBAAqB,EAAEmB,cAAc,EAAEZ,UAAU,CAAC;MAExD,MAAMmB,UAAU,GAAG,MAAMN,WAAW,CAACG,YAAY,CAACJ,cAAc,EAAEM,UAAU,EAAE,GAAGlB,UAAU,CAAC;MAE5FG,OAAO,CAACI,MAAM,GAAGa,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEd,MAAM,EAAE,IAAAjB,MAAA,CAAAM,OAAI,EAACuB,UAAU,EAAE,aAAa,CAAC,EAAE;QAC1EF,aAAa,EAAE;OAChB,CAAC;IACJ,CAAC,MAAM,IAAIN,QAAQ,EAAE;MACnB,MAAM,IAAIpB,QAAA,CAAAwB,gBAAgB,CAAC,mBAAmB,CAAC;IACjD;IAEA,OAAOV,IAAI,EAAE;EACf,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}