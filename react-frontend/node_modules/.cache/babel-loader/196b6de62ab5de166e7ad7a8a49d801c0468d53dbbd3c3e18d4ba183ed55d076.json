{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst http_1 = __importDefault(require(\"http\"));\nconst socket_io_1 = require(\"socket.io\");\nconst commons_1 = require(\"@feathersjs/commons\");\nconst transport_commons_1 = require(\"@feathersjs/transport-commons\");\nconst middleware_1 = require(\"./middleware\");\nconst debug = (0, commons_1.createDebug)('@feathersjs/socketio');\nfunction configureSocketio(port, options, config) {\n  if (typeof port !== 'number') {\n    config = options;\n    options = port;\n    port = null;\n  }\n  if (typeof options !== 'object') {\n    config = options;\n    options = {};\n  }\n  return app => {\n    // Function that gets the connection\n    const getParams = socket => socket.feathers;\n    // A mapping from connection to socket instance\n    const socketMap = new WeakMap();\n    // Promise that resolves with the Socket.io `io` instance\n    // when `setup` has been called (with a server)\n    const done = new Promise(resolve => {\n      const {\n        listen,\n        setup\n      } = app;\n      Object.assign(app, {\n        async listen(...args) {\n          if (typeof listen === 'function') {\n            // If `listen` already exists\n            // usually the case when the app has been expressified\n            return listen.call(this, ...args);\n          }\n          const server = http_1.default.createServer();\n          await this.setup(server);\n          return server.listen(...args);\n        },\n        async setup(server, ...rest) {\n          if (!this.io) {\n            const io = this.io = new socket_io_1.Server(port || server, options);\n            io.use((0, middleware_1.disconnect)(app, getParams, socketMap));\n            io.use((0, middleware_1.params)(app, socketMap));\n            io.use((0, middleware_1.authentication)(app, getParams));\n            // In Feathers it is easy to hit the standard Node warning limit\n            // of event listeners (e.g. by registering 10 services).\n            // So we set it to a higher number. 64 should be enough for everyone.\n            io.sockets.setMaxListeners(64);\n          }\n          if (typeof config === 'function') {\n            debug('Calling SocketIO configuration function');\n            config.call(this, this.io);\n          }\n          resolve(this.io);\n          return setup.call(this, server, ...rest);\n        }\n      });\n    });\n    app.configure((0, transport_commons_1.socket)({\n      done,\n      socketMap,\n      getParams,\n      emit: 'emit'\n    }));\n  };\n}\nmodule.exports = configureSocketio;","map":{"version":3,"names":["http_1","__importDefault","require","socket_io_1","commons_1","transport_commons_1","middleware_1","debug","createDebug","configureSocketio","port","options","config","app","getParams","socket","feathers","socketMap","WeakMap","done","Promise","resolve","listen","setup","Object","assign","args","call","server","default","createServer","rest","io","Server","use","disconnect","params","authentication","sockets","setMaxListeners","configure","emit","module","exports"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\socketio\\src\\index.ts"],"sourcesContent":["import http from 'http'\nimport { Server, ServerOptions } from 'socket.io'\nimport { createDebug } from '@feathersjs/commons'\nimport { Application, RealTimeConnection } from '@feathersjs/feathers'\nimport { socket } from '@feathersjs/transport-commons'\n\nimport { disconnect, params, authentication, FeathersSocket } from './middleware'\n\nconst debug = createDebug('@feathersjs/socketio')\n\ndeclare module '@feathersjs/feathers/lib/declarations' {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface Application<Services, Settings> {\n    io: any\n    listen(options: any): Promise<http.Server>\n  }\n}\n\nfunction configureSocketio(callback?: (io: Server) => void): (app: Application) => void\nfunction configureSocketio(\n  options: number | Partial<ServerOptions>,\n  callback?: (io: Server) => void\n): (app: Application) => void\nfunction configureSocketio(\n  port: number,\n  options?: Partial<ServerOptions>,\n  callback?: (io: Server) => void\n): (app: Application) => void\nfunction configureSocketio(port?: any, options?: any, config?: any) {\n  if (typeof port !== 'number') {\n    config = options\n    options = port\n    port = null\n  }\n\n  if (typeof options !== 'object') {\n    config = options\n    options = {}\n  }\n\n  return (app: Application) => {\n    // Function that gets the connection\n    const getParams = (socket: FeathersSocket) => socket.feathers\n    // A mapping from connection to socket instance\n    const socketMap = new WeakMap<RealTimeConnection, FeathersSocket>()\n    // Promise that resolves with the Socket.io `io` instance\n    // when `setup` has been called (with a server)\n    const done = new Promise((resolve) => {\n      const { listen, setup } = app as any\n\n      Object.assign(app, {\n        async listen(this: any, ...args: any[]) {\n          if (typeof listen === 'function') {\n            // If `listen` already exists\n            // usually the case when the app has been expressified\n            return listen.call(this, ...args)\n          }\n\n          const server = http.createServer()\n\n          await this.setup(server)\n\n          return server.listen(...args)\n        },\n\n        async setup(this: any, server: http.Server, ...rest: any[]) {\n          if (!this.io) {\n            const io = (this.io = new Server(port || server, options))\n\n            io.use(disconnect(app, getParams, socketMap))\n            io.use(params(app, socketMap))\n            io.use(authentication(app, getParams))\n\n            // In Feathers it is easy to hit the standard Node warning limit\n            // of event listeners (e.g. by registering 10 services).\n            // So we set it to a higher number. 64 should be enough for everyone.\n            io.sockets.setMaxListeners(64)\n          }\n\n          if (typeof config === 'function') {\n            debug('Calling SocketIO configuration function')\n            config.call(this, this.io)\n          }\n\n          resolve(this.io)\n\n          return setup.call(this, server, ...rest)\n        }\n      })\n    })\n\n    app.configure(\n      socket({\n        done,\n        socketMap,\n        getParams,\n        emit: 'emit'\n      })\n    )\n  }\n}\n\nexport = configureSocketio\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}