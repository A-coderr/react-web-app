{"ast":null,"code":"\"use strict\";\n\n// Sorting algorithm taken from NeDB (https://github.com/louischatriot/nedb)\n// See https://github.com/louischatriot/nedb/blob/e3f0078499aa1005a59d0c2372e425ab789145c1/lib/model.js#L189\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sorter = exports.compare = exports.compareArrays = exports.compareNSB = void 0;\nfunction compareNSB(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\nexports.compareNSB = compareNSB;\nfunction compareArrays(a, b) {\n  for (let i = 0, l = Math.min(a.length, b.length); i < l; i++) {\n    const comparison = compare(a[i], b[i]);\n    if (comparison !== 0) {\n      return comparison;\n    }\n  }\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\nexports.compareArrays = compareArrays;\nfunction compare(a, b, compareStrings = compareNSB) {\n  if (a === b) {\n    return 0;\n  }\n  // undefined\n  if (a === undefined) {\n    return -1;\n  }\n  if (b === undefined) {\n    return 1;\n  }\n  // null\n  if (a === null) {\n    return -1;\n  }\n  if (b === null) {\n    return 1;\n  }\n  // Numbers\n  if (typeof a === 'number') {\n    return typeof b === 'number' ? compareNSB(a, b) : -1;\n  }\n  if (typeof b === 'number') {\n    return 1;\n  }\n  // Strings\n  if (typeof a === 'string') {\n    return typeof b === 'string' ? compareStrings(a, b) : -1;\n  }\n  if (typeof b === 'string') {\n    return 1;\n  }\n  // Booleans\n  if (typeof a === 'boolean') {\n    return typeof b === 'boolean' ? compareNSB(a, b) : -1;\n  }\n  if (typeof b === 'boolean') {\n    return 1;\n  }\n  // Dates\n  if (a instanceof Date) {\n    return b instanceof Date ? compareNSB(a.getTime(), b.getTime()) : -1;\n  }\n  if (b instanceof Date) {\n    return 1;\n  }\n  // Arrays (first element is most significant and so on)\n  if (Array.isArray(a)) {\n    return Array.isArray(b) ? compareArrays(a, b) : -1;\n  }\n  if (Array.isArray(b)) {\n    return 1;\n  }\n  // Objects\n  const aKeys = Object.keys(a).sort();\n  const bKeys = Object.keys(b).sort();\n  for (let i = 0, l = Math.min(aKeys.length, bKeys.length); i < l; i++) {\n    const comparison = compare(a[aKeys[i]], b[bKeys[i]]);\n    if (comparison !== 0) {\n      return comparison;\n    }\n  }\n  return compareNSB(aKeys.length, bKeys.length);\n}\nexports.compare = compare;\n// An in-memory sorting function according to the\n// $sort special query parameter\nfunction sorter($sort) {\n  const get = (value, path) => path.reduce((value, key) => value[key], value);\n  const compares = Object.keys($sort).map(key => {\n    const direction = $sort[key];\n    const path = key.split('.');\n    if (path.length === 1) {\n      return (a, b) => direction * compare(a[key], b[key]);\n    } else {\n      return (a, b) => direction * compare(get(a, path), get(b, path));\n    }\n  });\n  return function (a, b) {\n    for (const compare of compares) {\n      const comparasion = compare(a, b);\n      if (comparasion !== 0) {\n        return comparasion;\n      }\n    }\n    return 0;\n  };\n}\nexports.sorter = sorter;","map":{"version":3,"names":["compareNSB","a","b","exports","compareArrays","i","l","Math","min","length","comparison","compare","compareStrings","undefined","Date","getTime","Array","isArray","aKeys","Object","keys","sort","bKeys","sorter","$sort","get","value","path","reduce","key","compares","map","direction","split","comparasion"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\adapter-commons\\src\\sort.ts"],"sourcesContent":["// Sorting algorithm taken from NeDB (https://github.com/louischatriot/nedb)\n// See https://github.com/louischatriot/nedb/blob/e3f0078499aa1005a59d0c2372e425ab789145c1/lib/model.js#L189\n\nexport function compareNSB(a: any, b: any) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nexport function compareArrays(a: any[], b: any[]) {\n  for (let i = 0, l = Math.min(a.length, b.length); i < l; i++) {\n    const comparison = compare(a[i], b[i])\n\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length)\n}\n\nexport function compare(a: any, b: any, compareStrings: any = compareNSB): 0 | 1 | -1 {\n  if (a === b) {\n    return 0\n  }\n\n  // undefined\n  if (a === undefined) {\n    return -1\n  }\n  if (b === undefined) {\n    return 1\n  }\n\n  // null\n  if (a === null) {\n    return -1\n  }\n  if (b === null) {\n    return 1\n  }\n\n  // Numbers\n  if (typeof a === 'number') {\n    return typeof b === 'number' ? compareNSB(a, b) : -1\n  }\n  if (typeof b === 'number') {\n    return 1\n  }\n\n  // Strings\n  if (typeof a === 'string') {\n    return typeof b === 'string' ? compareStrings(a, b) : -1\n  }\n  if (typeof b === 'string') {\n    return 1\n  }\n\n  // Booleans\n  if (typeof a === 'boolean') {\n    return typeof b === 'boolean' ? compareNSB(a, b) : -1\n  }\n  if (typeof b === 'boolean') {\n    return 1\n  }\n\n  // Dates\n  if (a instanceof Date) {\n    return b instanceof Date ? compareNSB(a.getTime(), b.getTime()) : -1\n  }\n  if (b instanceof Date) {\n    return 1\n  }\n\n  // Arrays (first element is most significant and so on)\n  if (Array.isArray(a)) {\n    return Array.isArray(b) ? compareArrays(a, b) : -1\n  }\n  if (Array.isArray(b)) {\n    return 1\n  }\n\n  // Objects\n  const aKeys = Object.keys(a).sort()\n  const bKeys = Object.keys(b).sort()\n\n  for (let i = 0, l = Math.min(aKeys.length, bKeys.length); i < l; i++) {\n    const comparison = compare(a[aKeys[i]], b[bKeys[i]])\n\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length)\n}\n\n// An in-memory sorting function according to the\n// $sort special query parameter\nexport function sorter($sort: { [key: string]: -1 | 1 }) {\n  const get = (value: any, path: string[]) => path.reduce((value, key) => value[key], value)\n\n  const compares = Object.keys($sort).map((key) => {\n    const direction = $sort[key]\n    const path = key.split('.')\n\n    if (path.length === 1) {\n      return (a: any, b: any) => direction * compare(a[key], b[key])\n    } else {\n      return (a: any, b: any) => direction * compare(get(a, path), get(b, path))\n    }\n  })\n\n  return function (a: any, b: any) {\n    for (const compare of compares) {\n      const comparasion = compare(a, b)\n\n      if (comparasion !== 0) {\n        return comparasion\n      }\n    }\n\n    return 0\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}