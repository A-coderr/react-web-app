{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authenticate = exports.parseAuthentication = void 0;\nconst commons_1 = require(\"@feathersjs/commons\");\nconst authentication_1 = require(\"@feathersjs/authentication\");\nconst debug = (0, commons_1.createDebug)('@feathersjs/express/authentication');\nconst toHandler = func => {\n  return (req, res, next) => func(req, res, next).catch(error => next(error));\n};\nfunction parseAuthentication(settings = {}) {\n  return toHandler(async (req, res, next) => {\n    var _a;\n    const app = req.app;\n    const service = (_a = app.defaultAuthentication) === null || _a === void 0 ? void 0 : _a.call(app, settings.service);\n    if (!service) {\n      return next();\n    }\n    const config = service.configuration;\n    const authStrategies = settings.strategies || config.parseStrategies || config.authStrategies || [];\n    if (authStrategies.length === 0) {\n      debug('No `authStrategies` or `parseStrategies` found in authentication configuration');\n      return next();\n    }\n    const authentication = await service.parse(req, res, ...authStrategies);\n    if (authentication) {\n      debug('Parsed authentication from HTTP header', authentication);\n      req.feathers = {\n        ...req.feathers,\n        authentication\n      };\n    }\n    return next();\n  });\n}\nexports.parseAuthentication = parseAuthentication;\nfunction authenticate(settings, ...strategies) {\n  const hook = (0, authentication_1.authenticate)(settings, ...strategies);\n  return toHandler(async (req, _res, next) => {\n    const app = req.app;\n    const params = req.feathers;\n    const context = {\n      app,\n      params\n    };\n    await hook(context);\n    req.feathers = context.params;\n    return next();\n  });\n}\nexports.authenticate = authenticate;","map":{"version":3,"names":["commons_1","require","authentication_1","debug","createDebug","toHandler","func","req","res","next","catch","error","parseAuthentication","settings","app","service","_a","defaultAuthentication","call","config","configuration","authStrategies","strategies","parseStrategies","length","authentication","parse","feathers","exports","authenticate","hook","_res","params","context"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\express\\src\\authentication.ts"],"sourcesContent":["import { RequestHandler, Request, Response } from 'express'\nimport { HookContext } from '@feathersjs/feathers'\nimport { createDebug } from '@feathersjs/commons'\nimport { authenticate as AuthenticateHook } from '@feathersjs/authentication'\n\nimport { Application } from './declarations'\n\nconst debug = createDebug('@feathersjs/express/authentication')\n\nconst toHandler = (\n  func: (req: Request, res: Response, next: () => void) => Promise<void>\n): RequestHandler => {\n  return (req, res, next) => func(req, res, next).catch((error) => next(error))\n}\n\nexport type AuthenticationSettings = {\n  service?: string\n  strategies?: string[]\n}\n\nexport function parseAuthentication(settings: AuthenticationSettings = {}): RequestHandler {\n  return toHandler(async (req, res, next) => {\n    const app = req.app as any as Application\n    const service = app.defaultAuthentication?.(settings.service)\n\n    if (!service) {\n      return next()\n    }\n\n    const config = service.configuration\n    const authStrategies = settings.strategies || config.parseStrategies || config.authStrategies || []\n\n    if (authStrategies.length === 0) {\n      debug('No `authStrategies` or `parseStrategies` found in authentication configuration')\n      return next()\n    }\n\n    const authentication = await service.parse(req, res, ...authStrategies)\n\n    if (authentication) {\n      debug('Parsed authentication from HTTP header', authentication)\n      req.feathers = { ...req.feathers, authentication }\n    }\n\n    return next()\n  })\n}\n\nexport function authenticate(\n  settings: string | AuthenticationSettings,\n  ...strategies: string[]\n): RequestHandler {\n  const hook = AuthenticateHook(settings, ...strategies)\n\n  return toHandler(async (req, _res, next) => {\n    const app = req.app as any as Application\n    const params = req.feathers\n    const context = { app, params } as any as HookContext\n\n    await hook(context)\n\n    req.feathers = context.params\n\n    return next()\n  })\n}\n"],"mappings":";;;;;;AAEA,MAAAA,SAAA,GAAAC,OAAA;AACA,MAAAC,gBAAA,GAAAD,OAAA;AAIA,MAAME,KAAK,GAAG,IAAAH,SAAA,CAAAI,WAAW,EAAC,oCAAoC,CAAC;AAE/D,MAAMC,SAAS,GACbC,IAAsE,IACpD;EAClB,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAKH,IAAI,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAKF,IAAI,CAACE,KAAK,CAAC,CAAC;AAC/E,CAAC;AAOD,SAAgBC,mBAAmBA,CAACC,QAAA,GAAmC,EAAE;EACvE,OAAOR,SAAS,CAAC,OAAOE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAI;;IACxC,MAAMK,GAAG,GAAGP,GAAG,CAACO,GAAyB;IACzC,MAAMC,OAAO,GAAG,CAAAC,EAAA,GAAAF,GAAG,CAACG,qBAAqB,cAAAD,EAAA,uBAAAA,EAAA,CAAAE,IAAA,CAAAJ,GAAA,EAAGD,QAAQ,CAACE,OAAO,CAAC;IAE7D,IAAI,CAACA,OAAO,EAAE;MACZ,OAAON,IAAI,EAAE;IACf;IAEA,MAAMU,MAAM,GAAGJ,OAAO,CAACK,aAAa;IACpC,MAAMC,cAAc,GAAGR,QAAQ,CAACS,UAAU,IAAIH,MAAM,CAACI,eAAe,IAAIJ,MAAM,CAACE,cAAc,IAAI,EAAE;IAEnG,IAAIA,cAAc,CAACG,MAAM,KAAK,CAAC,EAAE;MAC/BrB,KAAK,CAAC,gFAAgF,CAAC;MACvF,OAAOM,IAAI,EAAE;IACf;IAEA,MAAMgB,cAAc,GAAG,MAAMV,OAAO,CAACW,KAAK,CAACnB,GAAG,EAAEC,GAAG,EAAE,GAAGa,cAAc,CAAC;IAEvE,IAAII,cAAc,EAAE;MAClBtB,KAAK,CAAC,wCAAwC,EAAEsB,cAAc,CAAC;MAC/DlB,GAAG,CAACoB,QAAQ,GAAG;QAAE,GAAGpB,GAAG,CAACoB,QAAQ;QAAEF;MAAc,CAAE;IACpD;IAEA,OAAOhB,IAAI,EAAE;EACf,CAAC,CAAC;AACJ;AA1BAmB,OAAA,CAAAhB,mBAAA,GAAAA,mBAAA;AA4BA,SAAgBiB,YAAYA,CAC1BhB,QAAyC,EACzC,GAAGS,UAAoB;EAEvB,MAAMQ,IAAI,GAAG,IAAA5B,gBAAA,CAAA2B,YAAgB,EAAChB,QAAQ,EAAE,GAAGS,UAAU,CAAC;EAEtD,OAAOjB,SAAS,CAAC,OAAOE,GAAG,EAAEwB,IAAI,EAAEtB,IAAI,KAAI;IACzC,MAAMK,GAAG,GAAGP,GAAG,CAACO,GAAyB;IACzC,MAAMkB,MAAM,GAAGzB,GAAG,CAACoB,QAAQ;IAC3B,MAAMM,OAAO,GAAG;MAAEnB,GAAG;MAAEkB;IAAM,CAAwB;IAErD,MAAMF,IAAI,CAACG,OAAO,CAAC;IAEnB1B,GAAG,CAACoB,QAAQ,GAAGM,OAAO,CAACD,MAAM;IAE7B,OAAOvB,IAAI,EAAE;EACf,CAAC,CAAC;AACJ;AAjBAmB,OAAA,CAAAC,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}