{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorHandler = exports.notFound = void 0;\nconst path_1 = __importDefault(require(\"path\"));\nconst errors_1 = require(\"@feathersjs/errors\");\nconst defaults = {\n  public: path_1.default.resolve(__dirname, '..', 'public'),\n  logger: console\n};\nconst defaultHtmlError = path_1.default.resolve(defaults.public, 'default.html');\nfunction notFound({\n  verbose = false\n} = {}) {\n  return function (req, _res, next) {\n    const url = `${req.url}`;\n    const message = `Page not found${verbose ? ': ' + url : ''}`;\n    next(new errors_1.NotFound(message, {\n      url\n    }));\n  };\n}\nexports.notFound = notFound;\nfunction errorHandler(_options = {}) {\n  const options = Object.assign({}, defaults, _options);\n  if (typeof options.html === 'undefined') {\n    options.html = {\n      401: path_1.default.resolve(options.public, '401.html'),\n      404: path_1.default.resolve(options.public, '404.html'),\n      default: defaultHtmlError\n    };\n  }\n  if (typeof options.json === 'undefined') {\n    options.json = {};\n  }\n  return function (error, req, res, next) {\n    // Set the error code for HTTP processing semantics\n    error.code = !isNaN(parseInt(error.code, 10)) ? parseInt(error.code, 10) : 500;\n    // Log the error if it didn't come from a service method call\n    if (options.logger && typeof options.logger.error === 'function' && !res.hook) {\n      if (error.code >= 500) {\n        options.logger.error(error);\n      } else {\n        options.logger.info(error);\n      }\n    }\n    if (error.type !== 'FeathersError') {\n      const oldError = error;\n      error = oldError.errors ? new errors_1.GeneralError(oldError.message, {\n        errors: oldError.errors\n      }) : new errors_1.GeneralError(oldError.message);\n      if (oldError.stack) {\n        error.stack = oldError.stack;\n      }\n    }\n    const formatter = {};\n    // If the developer passed a custom function for ALL html errors\n    if (typeof options.html === 'function') {\n      formatter['text/html'] = options.html;\n    } else {\n      let file = options.html[error.code];\n      if (!file) {\n        file = options.html.default || defaultHtmlError;\n      }\n      // If the developer passed a custom function for individual html errors\n      if (typeof file === 'function') {\n        formatter['text/html'] = file;\n      } else {\n        formatter['text/html'] = function () {\n          res.set('Content-Type', 'text/html');\n          res.sendFile(file);\n        };\n      }\n    }\n    // If the developer passed a custom function for ALL json errors\n    if (typeof options.json === 'function') {\n      formatter['application/json'] = options.json;\n    } else {\n      const handler = options.json[error.code] || options.json.default;\n      // If the developer passed a custom function for individual json errors\n      if (typeof handler === 'function') {\n        formatter['application/json'] = handler;\n      } else {\n        // Don't show stack trace if it is a 404 error\n        if (error.code === 404) {\n          error.stack = null;\n        }\n        formatter['application/json'] = function () {\n          const output = Object.assign({}, error.toJSON());\n          if (process.env.NODE_ENV === 'production') {\n            delete output.stack;\n          }\n          res.set('Content-Type', 'application/json');\n          res.json(output);\n        };\n      }\n    }\n    res.status(error.code);\n    const contentType = req.headers['content-type'] || '';\n    const accepts = req.headers.accept || '';\n    // by default just send back json\n    if (contentType.indexOf('json') !== -1 || accepts.indexOf('json') !== -1) {\n      formatter['application/json'](error, req, res, next);\n    } else if (options.html && (contentType.indexOf('html') !== -1 || accepts.indexOf('html') !== -1)) {\n      formatter['text/html'](error, req, res, next);\n    } else {\n      // TODO (EK): Maybe just return plain text\n      formatter['application/json'](error, req, res, next);\n    }\n  };\n}\nexports.errorHandler = errorHandler;","map":{"version":3,"names":["path_1","__importDefault","require","errors_1","defaults","public","default","resolve","__dirname","logger","console","defaultHtmlError","notFound","verbose","req","_res","next","url","message","NotFound","exports","errorHandler","_options","options","Object","assign","html","json","error","res","code","isNaN","parseInt","hook","info","type","oldError","errors","GeneralError","stack","formatter","file","set","sendFile","handler","output","toJSON","process","env","NODE_ENV","status","contentType","headers","accepts","accept","indexOf"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\express\\src\\handlers.ts"],"sourcesContent":["import path from 'path'\nimport { NotFound, GeneralError } from '@feathersjs/errors'\nimport { Request, Response, NextFunction, ErrorRequestHandler, RequestHandler } from 'express'\n\nconst defaults = {\n  public: path.resolve(__dirname, '..', 'public'),\n  logger: console\n}\nconst defaultHtmlError = path.resolve(defaults.public, 'default.html')\n\nexport function notFound({ verbose = false } = {}): RequestHandler {\n  return function (req: Request, _res: Response, next: NextFunction) {\n    const url = `${req.url}`\n    const message = `Page not found${verbose ? ': ' + url : ''}`\n\n    next(new NotFound(message, { url }))\n  }\n}\n\nexport type ErrorHandlerOptions = {\n  public?: string\n  logger?: boolean | { error?: (msg: any) => void; info?: (msg: any) => void }\n  html?: any\n  json?: any\n}\n\nexport function errorHandler(_options: ErrorHandlerOptions = {}): ErrorRequestHandler {\n  const options = Object.assign({}, defaults, _options)\n\n  if (typeof options.html === 'undefined') {\n    options.html = {\n      401: path.resolve(options.public, '401.html'),\n      404: path.resolve(options.public, '404.html'),\n      default: defaultHtmlError\n    }\n  }\n\n  if (typeof options.json === 'undefined') {\n    options.json = {}\n  }\n\n  return function (error: any, req: Request, res: Response, next: NextFunction) {\n    // Set the error code for HTTP processing semantics\n    error.code = !isNaN(parseInt(error.code, 10)) ? parseInt(error.code, 10) : 500\n\n    // Log the error if it didn't come from a service method call\n    if (options.logger && typeof options.logger.error === 'function' && !res.hook) {\n      if (error.code >= 500) {\n        options.logger.error(error)\n      } else {\n        options.logger.info(error)\n      }\n    }\n\n    if (error.type !== 'FeathersError') {\n      const oldError = error\n\n      error = oldError.errors\n        ? new GeneralError(oldError.message, {\n            errors: oldError.errors\n          })\n        : new GeneralError(oldError.message)\n\n      if (oldError.stack) {\n        error.stack = oldError.stack\n      }\n    }\n\n    const formatter: { [key: string]: any } = {}\n\n    // If the developer passed a custom function for ALL html errors\n    if (typeof options.html === 'function') {\n      formatter['text/html'] = options.html\n    } else {\n      let file = options.html[error.code]\n      if (!file) {\n        file = options.html.default || defaultHtmlError\n      }\n      // If the developer passed a custom function for individual html errors\n      if (typeof file === 'function') {\n        formatter['text/html'] = file\n      } else {\n        formatter['text/html'] = function () {\n          res.set('Content-Type', 'text/html')\n          res.sendFile(file)\n        }\n      }\n    }\n\n    // If the developer passed a custom function for ALL json errors\n    if (typeof options.json === 'function') {\n      formatter['application/json'] = options.json\n    } else {\n      const handler = options.json[error.code] || options.json.default\n      // If the developer passed a custom function for individual json errors\n      if (typeof handler === 'function') {\n        formatter['application/json'] = handler\n      } else {\n        // Don't show stack trace if it is a 404 error\n        if (error.code === 404) {\n          error.stack = null\n        }\n\n        formatter['application/json'] = function () {\n          const output = Object.assign({}, error.toJSON())\n\n          if (process.env.NODE_ENV === 'production') {\n            delete output.stack\n          }\n\n          res.set('Content-Type', 'application/json')\n          res.json(output)\n        }\n      }\n    }\n\n    res.status(error.code)\n\n    const contentType = req.headers['content-type'] || ''\n    const accepts = req.headers.accept || ''\n\n    // by default just send back json\n    if (contentType.indexOf('json') !== -1 || accepts.indexOf('json') !== -1) {\n      formatter['application/json'](error, req, res, next)\n    } else if (options.html && (contentType.indexOf('html') !== -1 || accepts.indexOf('html') !== -1)) {\n      formatter['text/html'](error, req, res, next)\n    } else {\n      // TODO (EK): Maybe just return plain text\n      formatter['application/json'](error, req, res, next)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}