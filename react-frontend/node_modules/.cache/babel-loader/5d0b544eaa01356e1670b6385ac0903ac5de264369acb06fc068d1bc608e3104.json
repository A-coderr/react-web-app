{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.socket = void 0;\nconst feathers_1 = require(\"@feathersjs/feathers\");\nconst channels_1 = require(\"../channels\");\nconst routing_1 = require(\"../routing\");\nconst utils_1 = require(\"./utils\");\nfunction socket({\n  done,\n  emit,\n  socketMap,\n  socketKey,\n  getParams\n}) {\n  return app => {\n    const leaveChannels = connection => {\n      const {\n        channels\n      } = app;\n      if (channels.length) {\n        app.channel(app.channels).leave(connection);\n      }\n    };\n    app.configure((0, channels_1.channels)());\n    app.configure((0, routing_1.routing)());\n    app.on('publish', (0, utils_1.getDispatcher)(emit, socketMap, socketKey));\n    app.on('disconnect', leaveChannels);\n    app.on('logout', (_authResult, params) => {\n      const {\n        connection\n      } = params;\n      if (connection) {\n        leaveChannels(connection);\n      }\n    });\n    // `connection` event\n    done.then(provider => provider.on('connection', connection => app.emit('connection', getParams(connection))));\n    // `socket.emit('methodName', 'serviceName', ...args)` handlers\n    done.then(provider => provider.on('connection', connection => {\n      const methodHandlers = Object.keys(app.services).reduce((result, name) => {\n        const {\n          methods\n        } = (0, feathers_1.getServiceOptions)(app.service(name));\n        methods.forEach(method => {\n          if (!result[method]) {\n            result[method] = (...args) => {\n              const [path, ...rest] = args;\n              (0, utils_1.runMethod)(app, getParams(connection), path, method, rest);\n            };\n          }\n        });\n        return result;\n      }, {});\n      Object.keys(methodHandlers).forEach(key => connection.on(key, methodHandlers[key]));\n    }));\n  };\n}\nexports.socket = socket;","map":{"version":3,"names":["feathers_1","require","channels_1","routing_1","utils_1","socket","done","emit","socketMap","socketKey","getParams","app","leaveChannels","connection","channels","length","channel","leave","configure","routing","on","getDispatcher","_authResult","params","then","provider","methodHandlers","Object","keys","services","reduce","result","name","methods","getServiceOptions","service","forEach","method","args","path","rest","runMethod","key","exports"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\transport-commons\\src\\socket\\index.ts"],"sourcesContent":["import { Application, getServiceOptions, Params, RealTimeConnection } from '@feathersjs/feathers'\nimport { channels } from '../channels'\nimport { routing } from '../routing'\nimport { getDispatcher, runMethod } from './utils'\n\nexport interface SocketOptions {\n  done: Promise<any>\n  emit: string\n  socketMap: WeakMap<RealTimeConnection, any>\n  socketKey?: any\n  getParams: (socket: any) => RealTimeConnection\n}\n\nexport function socket({ done, emit, socketMap, socketKey, getParams }: SocketOptions) {\n  return (app: Application) => {\n    const leaveChannels = (connection: RealTimeConnection) => {\n      const { channels } = app\n\n      if (channels.length) {\n        app.channel(app.channels).leave(connection)\n      }\n    }\n\n    app.configure(channels())\n    app.configure(routing())\n\n    app.on('publish', getDispatcher(emit, socketMap, socketKey))\n    app.on('disconnect', leaveChannels)\n    app.on('logout', (_authResult: any, params: Params) => {\n      const { connection } = params\n\n      if (connection) {\n        leaveChannels(connection)\n      }\n    })\n\n    // `connection` event\n    done.then((provider) =>\n      provider.on('connection', (connection: any) => app.emit('connection', getParams(connection)))\n    )\n\n    // `socket.emit('methodName', 'serviceName', ...args)` handlers\n    done.then((provider) =>\n      provider.on('connection', (connection: any) => {\n        const methodHandlers = Object.keys(app.services).reduce((result, name) => {\n          const { methods } = getServiceOptions(app.service(name))\n\n          methods.forEach((method) => {\n            if (!result[method]) {\n              result[method] = (...args: any[]) => {\n                const [path, ...rest] = args\n\n                runMethod(app, getParams(connection), path, method, rest)\n              }\n            }\n          })\n\n          return result\n        }, {} as any)\n\n        Object.keys(methodHandlers).forEach((key) => connection.on(key, methodHandlers[key]))\n      })\n    )\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,UAAA,GAAAD,OAAA;AACA,MAAAE,SAAA,GAAAF,OAAA;AACA,MAAAG,OAAA,GAAAH,OAAA;AAUA,SAAgBI,MAAMA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAS,CAAiB;EACnF,OAAQC,GAAgB,IAAI;IAC1B,MAAMC,aAAa,GAAIC,UAA8B,IAAI;MACvD,MAAM;QAAEC;MAAQ,CAAE,GAAGH,GAAG;MAExB,IAAIG,QAAQ,CAACC,MAAM,EAAE;QACnBJ,GAAG,CAACK,OAAO,CAACL,GAAG,CAACG,QAAQ,CAAC,CAACG,KAAK,CAACJ,UAAU,CAAC;MAC7C;IACF,CAAC;IAEDF,GAAG,CAACO,SAAS,CAAC,IAAAhB,UAAA,CAAAY,QAAQ,GAAE,CAAC;IACzBH,GAAG,CAACO,SAAS,CAAC,IAAAf,SAAA,CAAAgB,OAAO,GAAE,CAAC;IAExBR,GAAG,CAACS,EAAE,CAAC,SAAS,EAAE,IAAAhB,OAAA,CAAAiB,aAAa,EAACd,IAAI,EAAEC,SAAS,EAAEC,SAAS,CAAC,CAAC;IAC5DE,GAAG,CAACS,EAAE,CAAC,YAAY,EAAER,aAAa,CAAC;IACnCD,GAAG,CAACS,EAAE,CAAC,QAAQ,EAAE,CAACE,WAAgB,EAAEC,MAAc,KAAI;MACpD,MAAM;QAAEV;MAAU,CAAE,GAAGU,MAAM;MAE7B,IAAIV,UAAU,EAAE;QACdD,aAAa,CAACC,UAAU,CAAC;MAC3B;IACF,CAAC,CAAC;IAEF;IACAP,IAAI,CAACkB,IAAI,CAAEC,QAAQ,IACjBA,QAAQ,CAACL,EAAE,CAAC,YAAY,EAAGP,UAAe,IAAKF,GAAG,CAACJ,IAAI,CAAC,YAAY,EAAEG,SAAS,CAACG,UAAU,CAAC,CAAC,CAAC,CAC9F;IAED;IACAP,IAAI,CAACkB,IAAI,CAAEC,QAAQ,IACjBA,QAAQ,CAACL,EAAE,CAAC,YAAY,EAAGP,UAAe,IAAI;MAC5C,MAAMa,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACjB,GAAG,CAACkB,QAAQ,CAAC,CAACC,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAI;QACvE,MAAM;UAAEC;QAAO,CAAE,GAAG,IAAAjC,UAAA,CAAAkC,iBAAiB,EAACvB,GAAG,CAACwB,OAAO,CAACH,IAAI,CAAC,CAAC;QAExDC,OAAO,CAACG,OAAO,CAAEC,MAAM,IAAI;UACzB,IAAI,CAACN,MAAM,CAACM,MAAM,CAAC,EAAE;YACnBN,MAAM,CAACM,MAAM,CAAC,GAAG,CAAC,GAAGC,IAAW,KAAI;cAClC,MAAM,CAACC,IAAI,EAAE,GAAGC,IAAI,CAAC,GAAGF,IAAI;cAE5B,IAAAlC,OAAA,CAAAqC,SAAS,EAAC9B,GAAG,EAAED,SAAS,CAACG,UAAU,CAAC,EAAE0B,IAAI,EAAEF,MAAM,EAAEG,IAAI,CAAC;YAC3D,CAAC;UACH;QACF,CAAC,CAAC;QAEF,OAAOT,MAAM;MACf,CAAC,EAAE,EAAS,CAAC;MAEbJ,MAAM,CAACC,IAAI,CAACF,cAAc,CAAC,CAACU,OAAO,CAAEM,GAAG,IAAK7B,UAAU,CAACO,EAAE,CAACsB,GAAG,EAAEhB,cAAc,CAACgB,GAAG,CAAC,CAAC,CAAC;IACvF,CAAC,CAAC,CACH;EACH,CAAC;AACH;AAnDAC,OAAA,CAAAtC,MAAA,GAAAA,MAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}