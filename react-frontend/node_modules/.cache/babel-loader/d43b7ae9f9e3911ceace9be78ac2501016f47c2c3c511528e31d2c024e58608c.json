{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eventMixin = exports.eventHook = void 0;\nconst events_1 = require(\"events\");\nconst service_1 = require(\"./service\");\nfunction eventHook(context, next) {\n  const {\n    events\n  } = (0, service_1.getServiceOptions)(context.self);\n  const defaultEvent = service_1.defaultEventMap[context.method] || null;\n  context.event = defaultEvent;\n  return next().then(() => {\n    // Send the event only if the service does not do so already (indicated in the `events` option)\n    // This is used for custom events and for client services receiving event from the server\n    if (typeof context.event === 'string' && !events.includes(context.event)) {\n      const results = Array.isArray(context.result) ? context.result : [context.result];\n      results.forEach(element => context.self.emit(context.event, element, context));\n    }\n  });\n}\nexports.eventHook = eventHook;\nfunction eventMixin(service) {\n  const isEmitter = typeof service.on === 'function' && typeof service.emit === 'function';\n  if (!isEmitter) {\n    Object.assign(service, events_1.EventEmitter.prototype);\n  }\n  return service;\n}\nexports.eventMixin = eventMixin;","map":{"version":3,"names":["events_1","require","service_1","eventHook","context","next","events","getServiceOptions","self","defaultEvent","defaultEventMap","method","event","then","includes","results","Array","isArray","result","forEach","element","emit","exports","eventMixin","service","isEmitter","on","Object","assign","EventEmitter","prototype"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-web-app\\react-frontend\\node_modules\\@feathersjs\\feathers\\src\\events.ts"],"sourcesContent":["import { EventEmitter } from 'events'\nimport { NextFunction } from '@feathersjs/hooks'\nimport { HookContext, FeathersService } from './declarations'\nimport { getServiceOptions, defaultEventMap } from './service'\n\nexport function eventHook(context: HookContext, next: NextFunction) {\n  const { events } = getServiceOptions((context as any).self)\n  const defaultEvent = (defaultEventMap as any)[context.method] || null\n\n  context.event = defaultEvent\n\n  return next().then(() => {\n    // Send the event only if the service does not do so already (indicated in the `events` option)\n    // This is used for custom events and for client services receiving event from the server\n    if (typeof context.event === 'string' && !events.includes(context.event)) {\n      const results = Array.isArray(context.result) ? context.result : [context.result]\n\n      results.forEach((element) => (context as any).self.emit(context.event, element, context))\n    }\n  })\n}\n\nexport function eventMixin<A>(service: FeathersService<A>) {\n  const isEmitter = typeof service.on === 'function' && typeof service.emit === 'function'\n\n  if (!isEmitter) {\n    Object.assign(service, EventEmitter.prototype)\n  }\n\n  return service\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAGA,MAAAC,SAAA,GAAAD,OAAA;AAEA,SAAgBE,SAASA,CAACC,OAAoB,EAAEC,IAAkB;EAChE,MAAM;IAAEC;EAAM,CAAE,GAAG,IAAAJ,SAAA,CAAAK,iBAAiB,EAAEH,OAAe,CAACI,IAAI,CAAC;EAC3D,MAAMC,YAAY,GAAIP,SAAA,CAAAQ,eAAuB,CAACN,OAAO,CAACO,MAAM,CAAC,IAAI,IAAI;EAErEP,OAAO,CAACQ,KAAK,GAAGH,YAAY;EAE5B,OAAOJ,IAAI,EAAE,CAACQ,IAAI,CAAC,MAAK;IACtB;IACA;IACA,IAAI,OAAOT,OAAO,CAACQ,KAAK,KAAK,QAAQ,IAAI,CAACN,MAAM,CAACQ,QAAQ,CAACV,OAAO,CAACQ,KAAK,CAAC,EAAE;MACxE,MAAMG,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACb,OAAO,CAACc,MAAM,CAAC,GAAGd,OAAO,CAACc,MAAM,GAAG,CAACd,OAAO,CAACc,MAAM,CAAC;MAEjFH,OAAO,CAACI,OAAO,CAAEC,OAAO,IAAMhB,OAAe,CAACI,IAAI,CAACa,IAAI,CAACjB,OAAO,CAACQ,KAAK,EAAEQ,OAAO,EAAEhB,OAAO,CAAC,CAAC;IAC3F;EACF,CAAC,CAAC;AACJ;AAfAkB,OAAA,CAAAnB,SAAA,GAAAA,SAAA;AAiBA,SAAgBoB,UAAUA,CAAIC,OAA2B;EACvD,MAAMC,SAAS,GAAG,OAAOD,OAAO,CAACE,EAAE,KAAK,UAAU,IAAI,OAAOF,OAAO,CAACH,IAAI,KAAK,UAAU;EAExF,IAAI,CAACI,SAAS,EAAE;IACdE,MAAM,CAACC,MAAM,CAACJ,OAAO,EAAExB,QAAA,CAAA6B,YAAY,CAACC,SAAS,CAAC;EAChD;EAEA,OAAON,OAAO;AAChB;AARAF,OAAA,CAAAC,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}