{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.publishMixin = exports.channelMixin = exports.keys = void 0;\n/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\nconst feathers_1 = require(\"@feathersjs/feathers\");\nconst commons_1 = require(\"@feathersjs/commons\");\nconst base_1 = require(\"./channel/base\");\nconst combined_1 = require(\"./channel/combined\");\nconst debug = (0, commons_1.createDebug)('@feathersjs/transport-commons/channels/mixins');\nconst PUBLISHERS = Symbol.for('@feathersjs/transport-commons/publishers');\nconst CHANNELS = Symbol.for('@feathersjs/transport-commons/channels');\nconst ALL_EVENTS = Symbol.for('@feathersjs/transport-commons/all-events');\nexports.keys = {\n  PUBLISHERS: PUBLISHERS,\n  CHANNELS: CHANNELS,\n  ALL_EVENTS: ALL_EVENTS\n};\nfunction channelMixin() {\n  const mixin = {\n    [CHANNELS]: {},\n    channel(...names) {\n      debug('Returning channels', names);\n      if (names.length === 0) {\n        throw new Error('app.channel needs at least one channel name');\n      }\n      if (names.length === 1) {\n        const [name] = names;\n        if (Array.isArray(name)) {\n          return this.channel(...name);\n        }\n        if (!this[CHANNELS][name]) {\n          const channel = new base_1.Channel();\n          channel.once('empty', () => {\n            channel.removeAllListeners();\n            delete this[CHANNELS][name];\n          });\n          this[CHANNELS][name] = channel;\n        }\n        return this[CHANNELS][name];\n      }\n      const channels = names.map(name => this.channel(name));\n      return new combined_1.CombinedChannel(channels);\n    }\n  };\n  return mixin;\n}\nexports.channelMixin = channelMixin;\nfunction publishMixin() {\n  const result = {\n    [PUBLISHERS]: {},\n    publish(...args) {\n      return this.registerPublisher(...args);\n    },\n    registerPublisher(event, publisher) {\n      debug('Registering publisher', event);\n      if (!publisher && typeof event === 'function') {\n        publisher = event;\n        event = ALL_EVENTS;\n      }\n      const {\n        serviceEvents = feathers_1.defaultServiceEvents\n      } = (0, feathers_1.getServiceOptions)(this) || {};\n      if (event !== ALL_EVENTS && !serviceEvents.includes(event)) {\n        throw new Error(`'${event.toString()}' is not a valid service event`);\n      }\n      const publishers = this[PUBLISHERS];\n      publishers[event] = publisher;\n      return this;\n    }\n  };\n  return result;\n}\nexports.publishMixin = publishMixin;","map":{"version":3,"names":["feathers_1","require","commons_1","base_1","combined_1","debug","createDebug","PUBLISHERS","Symbol","for","CHANNELS","ALL_EVENTS","exports","keys","channelMixin","mixin","channel","names","length","Error","name","Array","isArray","Channel","once","removeAllListeners","channels","map","CombinedChannel","publishMixin","result","publish","args","registerPublisher","event","publisher","serviceEvents","defaultServiceEvents","getServiceOptions","includes","toString","publishers"],"sources":["C:\\Users\\VARLab ROG 1\\Documents\\workspace\\web\\react-frontend\\node_modules\\@feathersjs\\transport-commons\\src\\channels\\mixins.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\nimport { Application, HookContext, getServiceOptions, defaultServiceEvents } from '@feathersjs/feathers'\nimport { createDebug } from '@feathersjs/commons'\nimport { Channel } from './channel/base'\nimport { CombinedChannel } from './channel/combined'\n\nconst debug = createDebug('@feathersjs/transport-commons/channels/mixins')\nconst PUBLISHERS = Symbol.for('@feathersjs/transport-commons/publishers')\nconst CHANNELS = Symbol.for('@feathersjs/transport-commons/channels')\nconst ALL_EVENTS = Symbol.for('@feathersjs/transport-commons/all-events')\n\nexport const keys = {\n  PUBLISHERS: PUBLISHERS as typeof PUBLISHERS,\n  CHANNELS: CHANNELS as typeof CHANNELS,\n  ALL_EVENTS: ALL_EVENTS as typeof ALL_EVENTS\n}\n\nexport interface ChannelMixin {\n  [CHANNELS]: { [key: string]: Channel }\n  channel(...names: string[]): Channel\n}\n\nexport function channelMixin() {\n  const mixin: ChannelMixin = {\n    [CHANNELS]: {},\n\n    channel(...names: string[]): Channel {\n      debug('Returning channels', names)\n\n      if (names.length === 0) {\n        throw new Error('app.channel needs at least one channel name')\n      }\n\n      if (names.length === 1) {\n        const [name] = names\n\n        if (Array.isArray(name)) {\n          return this.channel(...name)\n        }\n\n        if (!this[CHANNELS][name]) {\n          const channel = new Channel()\n\n          channel.once('empty', () => {\n            channel.removeAllListeners()\n            delete this[CHANNELS][name]\n          })\n\n          this[CHANNELS][name] = channel\n        }\n\n        return this[CHANNELS][name]\n      }\n\n      const channels = names.map((name) => this.channel(name))\n\n      return new CombinedChannel(channels)\n    }\n  }\n\n  return mixin\n}\n\nexport type Event = string | typeof ALL_EVENTS\n\nexport type Publisher<T = any, A = Application, S = any> = (\n  data: T,\n  context: HookContext<A, S>\n) => Channel | Channel[] | void | Promise<Channel | Channel[] | void>\n\nexport interface PublishMixin<T = any> {\n  [PUBLISHERS]: { [ALL_EVENTS]?: Publisher<T>; [key: string]: Publisher<T> }\n  publish(event: Event, publisher: Publisher<T>): this\n  registerPublisher(event: Event, publisher: Publisher<T>): this\n}\n\nexport function publishMixin() {\n  const result: PublishMixin = {\n    [PUBLISHERS]: {},\n\n    publish(...args) {\n      return this.registerPublisher(...args)\n    },\n\n    registerPublisher(event, publisher) {\n      debug('Registering publisher', event)\n\n      if (!publisher && typeof event === 'function') {\n        publisher = event\n        event = ALL_EVENTS\n      }\n\n      const { serviceEvents = defaultServiceEvents } = getServiceOptions(this) || {}\n\n      if (event !== ALL_EVENTS && !serviceEvents.includes(event)) {\n        throw new Error(`'${event.toString()}' is not a valid service event`)\n      }\n\n      const publishers = this[PUBLISHERS]\n\n      publishers[event] = publisher\n\n      return this\n    }\n  }\n\n  return result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}